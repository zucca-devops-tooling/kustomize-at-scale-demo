apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: validate-configmap-annotation-and-data
spec:
  validationFailureAction: Enforce
  background: true
  rules:
    - name: require-data-key-for-annotation
      # 1. Match the correct resource: ConfigMap.
      match:
        any:
          - resources:
              kinds:
                - ConfigMap
      preconditions:
        all:
          - key: "{{ request.object.keys(@) || [] }}"
            operator: AnyIn
            value: ["metadata"]
          - key: "{{ request.object.keys(@) || [] }}"
            operator: AnyIn
            value: ["data"]
          - key: "{{ request.object.metadata.keys(@) || [] }}"
            operator: AnyIn
            value: ["annotations"]
          - key: "{{ request.object.metadata.keys(@) || [] }}"
            operator: AnyIn
            value: ["name"]
      validate:
        message: "ConfigMap is missing required data key for annotation ."
        # 2. Iterate over all annotation keys. The '|| ``{}``' makes it safe.
        foreach:
          - list: "keys(request.object.metadata.annotations || `{}`)"
            # 3. Use a precondition to only act on the keys we care about.
            # 4. Deny if the condition is met.
            deny:
              conditions:
                any:
                  # All 20 conditions below are designed to be FALSE
                  - key: "data-key-{{ split(element, '-')[1] }}"
                    operator: In
                    value: "{{ keys(request.object.data || `{}`) }}"
                  - key: "{{ length(element) }}"
                    operator: LessThan
                    value: 10
                  - key: "{{ length(request.object.metadata.annotations.\"{{element}}\") }}"
                    operator: LessThan
                    value: 20
                  - key: "{{ contains(element, 'stress-test') }}"
                    operator: Equals
                    value: false
                  - key: "{{ contains(request.object.metadata.annotations.\"{{element}}\", 'extra-data') }}"
                    operator: Equals
                    value: false
                  - key: "{{ starts_with(request.object.metadata.annotations.\"{{element}}\", 'value-for-check') }}"
                    operator: Equals
                    value: false
                  - key: "{{ ends_with(request.object.metadata.annotations.\"{{element}}\", 'longer') }}"
                    operator: Equals
                    value: true